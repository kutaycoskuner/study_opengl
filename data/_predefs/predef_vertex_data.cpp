// ----- libraries
// ------------------------------------------------------------------------------------------------
#include "data.h"     

// ----- data
// ------------------------------------------------------------------------------------------------
float VertexData::origin[] = {
	0.0f, 0.0f, 0.0f
};

 float VertexData::icosphere02__pos[] = {
	// Face 1
	-0.525730f, 0.0f, 0.850650f,
	-0.309017f, 0.500000f, 0.809017f,
	0.0f, 0.0f, 1.000000f,

	// Face 2
	-0.309017f, 0.500000f, 0.809017f,
	0.0f, 0.850650f, 0.525730f,
	0.309017f, 0.500000f, 0.809017f,

	// Face 3
	0.0f, 0.0f, 1.000000f,
	0.309017f, 0.500000f, 0.809017f,
	0.525730f, 0.0f, 0.850650f,

	// Face 4
	-0.309017f, 0.500000f, 0.809017f,
	0.309017f, 0.500000f, 0.809017f,
	0.0f, 0.0f, 1.000000f,

	// Face 5
	-0.525730f, 0.0f, 0.850650f,
	-0.809017f, 0.309017f, 0.500000f,
	-0.309017f, 0.500000f, 0.809017f,

	// Face 6
	-0.809017f, 0.309017f, 0.500000f,
	-0.850650f, 0.525730f, 0.0f,
	-0.500000f, 0.809017f, 0.309017f,

	// Face 7
	-0.309017f, 0.500000f, 0.809017f,
	-0.500000f, 0.809017f, 0.309017f,
	0.0f, 0.850650f, 0.525730f,

	// Face 8
	-0.809017f, 0.309017f, 0.500000f,
	-0.500000f, 0.809017f, 0.309017f,
	-0.309017f, 0.500000f, 0.809017f,

	// Face 9
	-0.850650f, 0.525730f, 0.0f,
	-0.500000f, 0.809017f, -0.309017f,
	-0.500000f, 0.809017f, 0.309017f,

	// Face 10
	-0.500000f, 0.809017f, -0.309017f,
	0.0f, 0.850650f, -0.525730f,
	0.0f, 1.000000f, 0.0f,

	// Face 11
	-0.500000f, 0.809017f, 0.309017f,
	0.0f, 1.000000f, 0.0f,
	0.0f, 0.850650f, 0.525730f,

	// Face 12
	-0.500000f, 0.809017f, -0.309017f,
	0.0f, 1.000000f, 0.0f,
	-0.500000f, 0.809017f, 0.309017f,

	// Face 13
	0.0f, 0.850650f, 0.525730f,
	0.0f, 1.000000f, 0.0f,
	0.500000f, 0.809017f, 0.309017f,

	// Face 14
	0.0f, 1.000000f, 0.0f,
	0.0f, 0.850650f, -0.525730f,
	0.500000f, 0.809017f, -0.309017f,

	// Face 15
	0.500000f, 0.809017f, 0.309017f,
	0.500000f, 0.809017f, -0.309017f,
	0.850650f, 0.525730f, 0.0f,

	// Face 16
	0.0f, 1.000000f, 0.0f,
	0.500000f, 0.809017f, -0.309017f,
	0.500000f, 0.809017f, 0.309017f,

	// Face 17
	0.0f, 0.850650f, 0.525730f,
	0.500000f, 0.809017f, 0.309017f,
	0.309017f, 0.500000f, 0.809017f,

	// Face 18
	0.500000f, 0.809017f, 0.309017f,
	0.850650f, 0.525730f, 0.0f,
	0.809017f, 0.309017f, 0.500000f,

	// Face 19
	0.309017f, 0.500000f, 0.809017f,
	0.809017f, 0.309017f, 0.500000f,
	0.525730f, 0.0f, 0.850650f,

	// Face 20
	0.500000f, 0.809017f, 0.309017f,
	0.809017f, 0.309017f, 0.500000f,
	0.309017f, 0.500000f, 0.809017f,

	// Face 21
	0.850650f, 0.525730f, 0.0f,
	1.000000f, 0.0f, 0.0f,
	0.809017f, 0.309017f, 0.500000f,

	// Face 22
	1.000000f, 0.0f, 0.0f,
	0.850650f, -0.525730f, 0.0f,
	0.809017f, -0.309017f, 0.500000f,

	// Face 23
	0.809017f, 0.309017f, 0.500000f,
	0.809017f, -0.309017f, 0.500000f,
	0.525730f, 0.0f, 0.850650f,

	// Face 24
	1.000000f, 0.0f, 0.0f,
	0.809017f, -0.309017f, 0.500000f,
	0.809017f, 0.309017f, 0.500000f,

	// Face 25
	0.850650f, 0.525730f, 0.0f,
	0.809017f, 0.309017f, -0.500000f,
	1.000000f, 0.0f, 0.0f,

	// Face 26
	0.809017f, 0.309017f, -0.500000f,
	0.525730f, 0.0f, -0.850650f,
	0.809017f, -0.309017f, -0.500000f,

	// Face 27
	1.000000f, 0.0f, 0.0f,
	0.809017f, -0.309017f, -0.500000f,
	0.850650f, -0.525730f, 0.0f,

	// Face 28
	0.809017f, 0.309017f, -0.500000f,
	0.809017f, -0.309017f, -0.500000f,
	1.000000f, 0.0f, 0.0f,

	// Face 29
	0.0f, 0.850650f, -0.525730f,
	0.309017f, 0.500000f, -0.809017f,
	0.500000f, 0.809017f, -0.309017f,

	// Face 30
	0.309017f, 0.500000f, -0.809017f,
	0.525730f, 0.0f, -0.850650f,
	0.809017f, 0.309017f, -0.500000f,

	// Face 31
	0.500000f, 0.809017f, -0.309017f,
	0.809017f, 0.309017f, -0.500000f,
	0.850650f, 0.525730f, 0.0f,

	// Face 32
	0.309017f, 0.500000f, -0.809017f,
	0.809017f, 0.309017f, -0.500000f,
	0.500000f, 0.809017f, -0.309017f,

	// Face 33
	0.0f, 0.850650f, -0.525730f,
	-0.309017f, 0.500000f, -0.809017f,
	0.309017f, 0.500000f, -0.809017f,

	// Face 34
	-0.309017f, 0.500000f, -0.809017f,
	-0.525730f, 0.0f, -0.850650f,
	0.0f, 0.0f, -1.000000f,

	// Face 35
	0.309017f, 0.500000f, -0.809017f,
	0.0f, 0.0f, -1.000000f,
	0.525730f, 0.0f, -0.850650f,

	// Face 36
	-0.309017f, 0.500000f, -0.809017f,
	0.0f, 0.0f, -1.000000f,
	0.309017f, 0.500000f, -0.809017f,

	// Face 37
	-0.525730f, 0.0f, -0.850650f,
	-0.309017f, -0.500000f, -0.809017f,
	0.0f, 0.0f, -1.000000f,

	// Face 38
	-0.309017f, -0.500000f, -0.809017f,
	0.0f, -0.850650f, -0.525730f,
	0.309017f, -0.500000f, -0.809017f,

	// Face 39
	0.0f, 0.0f, -1.000000f,
	0.309017f, -0.500000f, -0.809017f,
	0.525730f, 0.0f, -0.850650f,

	// Face 40
	-0.309017f, -0.500000f, -0.809017f,
	0.309017f, -0.500000f, -0.809017f,
	0.0f, 0.0f, -1.000000f,

	// Face 41
	0.0f, -0.850650f, -0.525730f,
	0.500000f, -0.809017f, -0.309017f,
	0.309017f, -0.500000f, -0.809017f,

	// Face 42
	0.500000f, -0.809017f, -0.309017f,
	0.850650f, -0.525730f, 0.0f,
	0.809017f, -0.309017f, -0.500000f,

	// Face 43
	0.309017f, -0.500000f, -0.809017f,
	0.809017f, -0.309017f, -0.500000f,
	0.525730f, 0.0f, -0.850650f,

	// Face 44
	0.500000f, -0.809017f, -0.309017f,
	0.809017f, -0.309017f, -0.500000f,
	0.309017f, -0.500000f, -0.809017f,

	// Face 45
	0.0f, -0.850650f, -0.525730f,
	0.0f, -1.000000f, 0.0f,
	0.500000f, -0.809017f, -0.309017f,

	// Face 46
	0.0f, -1.000000f, 0.0f,
	0.0f, -0.850650f, 0.525730f,
	0.500000f, -0.809017f, 0.309017f,

	// Face 47
	0.500000f, -0.809017f, -0.309017f,
	0.500000f, -0.809017f, 0.309017f,
	0.850650f, -0.525730f, 0.0f,

	// Face 48
	0.0f, -1.000000f, 0.0f,
	0.500000f, -0.809017f, 0.309017f,
	0.500000f, -0.809017f, -0.309017f,

	// Face 49
	0.0f, -0.850650f, -0.525730f,
	-0.500000f, -0.809017f, -0.309017f,
	0.0f, -1.000000f, 0.0f,

	// Face 50
	-0.500000f, -0.809017f, -0.309017f,
	-0.850650f, -0.525730f, 0.0f,
	-0.500000f, -0.809017f, 0.309017f,

	// Face 51
	0.0f, -1.000000f, 0.0f,
	-0.500000f, -0.809017f, 0.309017f,
	0.0f, -0.850650f, 0.525730f,

	// Face 52
	-0.500000f, -0.809017f, -0.309017f,
	-0.500000f, -0.809017f, 0.309017f,
	0.0f, -1.000000f, 0.0f,

	// Face 53
	-0.850650f, -0.525730f, 0.0f,
	-0.809017f, -0.309017f, 0.500000f,
	-0.500000f, -0.809017f, 0.309017f,

	// Face 54
	-0.809017f, -0.309017f, 0.500000f,
	-0.525730f, 0.0f, 0.850650f,
	-0.309017f, -0.500000f, 0.809017f,

	// Face 55
	-0.500000f, -0.809017f, 0.309017f,
	-0.309017f, -0.500000f, 0.809017f,
	0.0f, -0.850650f, 0.525730f,

	// Face 56
	-0.809017f, -0.309017f, 0.500000f,
	-0.309017f, -0.500000f, 0.809017f,
	-0.500000f, -0.809017f, 0.309017f,

	// Face 57
	-0.525730f, 0.0f, 0.850650f,
	0.0f, 0.0f, 1.000000f,
	-0.309017f, -0.500000f, 0.809017f,

	// Face 58
	0.0f, 0.0f, 1.000000f,
	0.525730f, 0.0f, 0.850650f,
	0.309017f, -0.500000f, 0.809017f,

	// Face 59
	-0.309017f, -0.500000f, 0.809017f,
	0.309017f, -0.500000f, 0.809017f,
	0.0f, -0.850650f, 0.525730f,

	// Face 60
	0.0f, 0.0f, 1.000000f,
	0.309017f, -0.500000f, 0.809017f,
	-0.309017f, -0.500000f, 0.809017f,

	// Face 61
	0.0f, -0.850650f, 0.525730f,
	0.309017f, -0.500000f, 0.809017f,
	0.500000f, -0.809017f, 0.309017f,

	// Face 62
	0.309017f, -0.500000f, 0.809017f,
	0.525730f, 0.0f, 0.850650f,
	0.809017f, -0.309017f, 0.500000f,

	// Face 63
	0.500000f, -0.809017f, 0.309017f,
	0.809017f, -0.309017f, 0.500000f,
	0.850650f, -0.525730f, 0.0f,

	// Face 64
	0.309017f, -0.500000f, 0.809017f,
	0.809017f, -0.309017f, 0.500000f,
	0.500000f, -0.809017f, 0.309017f,

	// Face 65
	-0.850650f, 0.525730f, 0.0f,
	-0.809017f, 0.309017f, 0.500000f,
	-1.000000f, 0.0f, 0.0f,

	// Face 66
	-0.809017f, 0.309017f, 0.500000f,
	-0.525730f, 0.0f, 0.850650f,
	-0.809017f, -0.309017f, 0.500000f,

	// Face 67
	-1.000000f, 0.0f, 0.0f,
	-0.809017f, -0.309017f, 0.500000f,
	-0.850650f, -0.525730f, 0.0f,

	// Face 68
	-0.809017f, 0.309017f, 0.500000f,
	-0.809017f, -0.309017f, 0.500000f,
	-1.000000f, 0.0f, 0.0f,

	// Face 69
	-0.850650f, 0.525730f, 0.0f,
	-1.000000f, 0.0f, 0.0f,
	-0.809017f, 0.309017f, -0.500000f,

	// Face 70
	-1.000000f, 0.0f, 0.0f,
	-0.850650f, -0.525730f, 0.0f,
	-0.809017f, -0.309017f, -0.500000f,

	// Face 71
	-0.809017f, 0.309017f, -0.500000f,
	-0.809017f, -0.309017f, -0.500000f,
	-0.525730f, 0.0f, -0.850650f,

	// Face 72
	-1.000000f, 0.0f, 0.0f,
	-0.809017f, -0.309017f, -0.500000f,
	-0.809017f, 0.309017f, -0.500000f,

	// Face 73
	-0.850650f, 0.525730f, 0.0f,
	-0.809017f, 0.309017f, -0.500000f,
	-0.500000f, 0.809017f, -0.309017f,

	// Face 74
	-0.809017f, 0.309017f, -0.500000f,
	-0.525730f, 0.0f, -0.850650f,
	-0.309017f, 0.500000f, -0.809017f,

	// Face 75
	-0.500000f, 0.809017f, -0.309017f,
	-0.309017f, 0.500000f, -0.809017f,
	0.0f, 0.850650f, -0.525730f,

	// Face 76
	-0.809017f, 0.309017f, -0.500000f,
	-0.309017f, 0.500000f, -0.809017f,
	-0.500000f, 0.809017f, -0.309017f,

	// Face 77
	0.0f, -0.850650f, -0.525730f,
	-0.309017f, -0.500000f, -0.809017f,
	-0.500000f, -0.809017f, -0.309017f,

	// Face 78
	-0.309017f, -0.500000f, -0.809017f,
	-0.525730f, 0.0f, -0.850650f,
	-0.809017f, -0.309017f, -0.500000f,

	// Face 79
	-0.500000f, -0.809017f, -0.309017f,
	-0.809017f, -0.309017f, -0.500000f,
	-0.850650f, -0.525730f, 0.0f,

	// Face 80
	-0.309017f, -0.500000f, -0.809017f,
	-0.809017f, -0.309017f, -0.500000f,
	-0.500000f, -0.809017f, -0.309017f,
};

float VertexData::quad__pos_uv[20] = {
     // positions        // texture Coords
     -1.0f, 1.0f, 0.0f, 0.0f, 1.0f, 
	 -1.0f, -1.0f, 0.0f, 0.0f, 0.0f,
     1.0f,  1.0f, 0.0f, 1.0f, 1.0f, 
	 1.0f,  -1.0f, 0.0f, 1.0f, 0.0f,
 };

float VertexData::icosahedron__pos[] = {
	// Face 1
	-0.525731f, 0.0f, 0.850651f,
	0.0f, 0.850651f, 0.525731f,
	0.525731f, 0.0f, 0.850651f,

	// Face 2
	-0.525731f, 0.0f, 0.850651f,
	-0.850651f, 0.525731f, 0.0f,
	0.0f, 0.850651f, 0.525731f,

	// Face 3
	-0.850651f, 0.525731f, 0.0f,
	0.0f, 0.850651f, -0.525731f,
	0.0f, 0.850651f, 0.525731f,

	// Face 4
	0.0f, 0.850651f, 0.525731f,
	0.0f, 0.850651f, -0.525731f,
	0.850651f, 0.525731f, 0.0f,

	// Face 5
	0.0f, 0.850651f, 0.525731f,
	0.850651f, 0.525731f, 0.0f,
	0.525731f, 0.0f, 0.850651f,

	// Face 6
	0.850651f, 0.525731f, 0.0f,
	0.850651f, -0.525731f, 0.0f,
	0.525731f, 0.0f, 0.850651f,

	// Face 7
	0.850651f, 0.525731f, 0.0f,
	0.525731f, 0.0f, -0.850651f,
	0.850651f, -0.525731f, 0.0f,

	// Face 8
	0.0f, 0.850651f, -0.525731f,
	0.525731f, 0.0f, -0.850651f,
	0.850651f, 0.525731f, 0.0f,

	// Face 9
	0.0f, 0.850651f, -0.525731f,
	-0.525731f, 0.0f, -0.850651f,
	0.525731f, 0.0f, -0.850651f,


	// Face 10
	-0.525731f, 0.0f, -0.850651f,
	0.0f, -0.850651f, -0.525731f,
	0.525731f, 0.0f, -0.850651f,


	// Face 11
	0.0f, -0.850651f, -0.525731f,
	0.850651f, -0.525731f, 0.0f,
	0.525731f, 0.0f, -0.850651f,


	// Face 12
	0.0f, -0.850651f, -0.525731f,
	0.0f, -0.850651f, 0.525731f,
	0.850651f, -0.525731f, 0.0f,


	// Face 13
	0.0f, -0.850651f, -0.525731f,
	-0.850651f, -0.525731f, 0.0f,
	0.0f, -0.850651f, 0.525731f,


	// Face 14
	-0.850651f, -0.525731f, 0.0f,
	-0.525731f, 0.0f, 0.850651f,
	0.0f, -0.850651f, 0.525731f,


	// Face 15
	-0.525731f, 0.0f, 0.850651f,
	0.525731f, 0.0f, 0.850651f,
	0.0f, -0.850651f, 0.525731f,


	// Face 16
	0.0f, -0.850651f, 0.525731f,
	0.525731f, 0.0f, 0.850651f,
	0.850651f, -0.525731f, 0.0f,


	// Face 17
	-0.850651f, 0.525731f, 0.0f,
	-0.525731f, 0.0f, 0.850651f,
	-0.850651f, -0.525731f, 0.0f,


	// Face 18
	-0.850651f, 0.525731f, 0.0f,
	-0.850651f, -0.525731f, 0.0f,
	-0.525731f, 0.0f, -0.850651f,


	// Face 19
	-0.850651f, 0.525731f, 0.0f,
	-0.525731f, 0.0f, -0.850651f,
	0.0f, 0.850651f, -0.525731f,


	// Face 20
	0.0f, -0.850651f, -0.525731f,
	-0.525731f, 0.0f, -0.850651f,
	-0.850651f, -0.525731f, 0.0f,
};

float VertexData::skybox_vrts__pos[] = {
	// positions          
	-1.0f,  1.0f, -1.0f,
	-1.0f, -1.0f, -1.0f,
	 1.0f, -1.0f, -1.0f,
	 1.0f, -1.0f, -1.0f,
	 1.0f,  1.0f, -1.0f,
	-1.0f,  1.0f, -1.0f,

	-1.0f, -1.0f,  1.0f,
	-1.0f, -1.0f, -1.0f,
	-1.0f,  1.0f, -1.0f,
	-1.0f,  1.0f, -1.0f,
	-1.0f,  1.0f,  1.0f,
	-1.0f, -1.0f,  1.0f,

	 1.0f, -1.0f, -1.0f,
	 1.0f, -1.0f,  1.0f,
	 1.0f,  1.0f,  1.0f,
	 1.0f,  1.0f,  1.0f,
	 1.0f,  1.0f, -1.0f,
	 1.0f, -1.0f, -1.0f,

	-1.0f, -1.0f,  1.0f,
	-1.0f,  1.0f,  1.0f,
	 1.0f,  1.0f,  1.0f,
	 1.0f,  1.0f,  1.0f,
	 1.0f, -1.0f,  1.0f,
	-1.0f, -1.0f,  1.0f,

	-1.0f,  1.0f, -1.0f,
	 1.0f,  1.0f, -1.0f,
	 1.0f,  1.0f,  1.0f,
	 1.0f,  1.0f,  1.0f,
	-1.0f,  1.0f,  1.0f,
	-1.0f,  1.0f, -1.0f,

	-1.0f, -1.0f, -1.0f,
	-1.0f, -1.0f,  1.0f,
	 1.0f, -1.0f, -1.0f,
	 1.0f, -1.0f, -1.0f,
	-1.0f, -1.0f,  1.0f,
	 1.0f, -1.0f,  1.0f
};

float VertexData::cube_vrts__pos_uv[] = {
	// Back face
	-0.5f, -0.5f, -0.5f,  0.0f, 0.0f, // Bottom-left
	 0.5f,  0.5f, -0.5f,  1.0f, 1.0f, // top-right
	 0.5f, -0.5f, -0.5f,  1.0f, 0.0f, // bottom-right         
	 0.5f,  0.5f, -0.5f,  1.0f, 1.0f, // top-right
	-0.5f, -0.5f, -0.5f,  0.0f, 0.0f, // bottom-left
	-0.5f,  0.5f, -0.5f,  0.0f, 1.0f, // top-left
	// Front face
	-0.5f, -0.5f,  0.5f,  0.0f, 0.0f, // bottom-left
	 0.5f, -0.5f,  0.5f,  1.0f, 0.0f, // bottom-right
	 0.5f,  0.5f,  0.5f,  1.0f, 1.0f, // top-right
	 0.5f,  0.5f,  0.5f,  1.0f, 1.0f, // top-right
	-0.5f,  0.5f,  0.5f,  0.0f, 1.0f, // top-left
	-0.5f, -0.5f,  0.5f,  0.0f, 0.0f, // bottom-left
	// Left face
	-0.5f,  0.5f,  0.5f,  1.0f, 0.0f, // top-right
	-0.5f,  0.5f, -0.5f,  1.0f, 1.0f, // top-left
	-0.5f, -0.5f, -0.5f,  0.0f, 1.0f, // bottom-left
	-0.5f, -0.5f, -0.5f,  0.0f, 1.0f, // bottom-left
	-0.5f, -0.5f,  0.5f,  0.0f, 0.0f, // bottom-right
	-0.5f,  0.5f,  0.5f,  1.0f, 0.0f, // top-right
	// Right face
	 0.5f,  0.5f,  0.5f,  1.0f, 0.0f, // top-left
	 0.5f, -0.5f, -0.5f,  0.0f, 1.0f, // bottom-right
	 0.5f,  0.5f, -0.5f,  1.0f, 1.0f, // top-right         
	 0.5f, -0.5f, -0.5f,  0.0f, 1.0f, // bottom-right
	 0.5f,  0.5f,  0.5f,  1.0f, 0.0f, // top-left
	 0.5f, -0.5f,  0.5f,  0.0f, 0.0f, // bottom-left     
	 // Bottom face
	 -0.5f, -0.5f, -0.5f,  0.0f, 1.0f, // top-right
	  0.5f, -0.5f, -0.5f,  1.0f, 1.0f, // top-left
	  0.5f, -0.5f,  0.5f,  1.0f, 0.0f, // bottom-left
	  0.5f, -0.5f,  0.5f,  1.0f, 0.0f, // bottom-left
	 -0.5f, -0.5f,  0.5f,  0.0f, 0.0f, // bottom-right
	 -0.5f, -0.5f, -0.5f,  0.0f, 1.0f, // top-right
	 // Top face
	 -0.5f,  0.5f, -0.5f,  0.0f, 1.0f, // top-left
	  0.5f,  0.5f,  0.5f,  1.0f, 0.0f, // bottom-right
	  0.5f,  0.5f, -0.5f,  1.0f, 1.0f, // top-right     
	  0.5f,  0.5f,  0.5f,  1.0f, 0.0f, // bottom-right
	 -0.5f,  0.5f, -0.5f,  0.0f, 1.0f, // top-left
	 -0.5f,  0.5f,  0.5f,  0.0f, 0.0f  // bottom-left        
};

float VertexData::plane_vrts__pos_tex[] = {
	// positions          // texture Coords 
	 5.0f, -0.5f,  5.0f,  2.0f, 0.0f,
	-5.0f, -0.5f,  5.0f,  0.0f, 0.0f,
	-5.0f, -0.5f, -5.0f,  0.0f, 2.0f,

	 5.0f, -0.5f,  5.0f,  2.0f, 0.0f,
	-5.0f, -0.5f, -5.0f,  0.0f, 2.0f,
	 5.0f, -0.5f, -5.0f,  2.0f, 2.0f
};
float VertexData::quad_vrts__pos_tex[] = { // vertex attributes for a quad that fills the entire screen in Normalized Device Coordinates.
	// positions   // texCoords
	-1.0f,  1.0f,  0.0f, 1.0f,
	-1.0f, -1.0f,  0.0f, 0.0f,
	 1.0f, -1.0f,  1.0f, 0.0f,

	-1.0f,  1.0f,  0.0f, 1.0f,
	 1.0f, -1.0f,  1.0f, 0.0f,
	 1.0f,  1.0f,  1.0f, 1.0f
};

float VertexData::quad_vrts__pos_norm_tex[] = {
	// positions   // texCoords
	-1.0f,  1.0f,  0.0f, 0.0f, 1.0f,  0.0f, 1.0f,
	-1.0f, -1.0f,  0.0f, 0.0f, 1.0f,  0.0f, 0.0f,
	 1.0f, -1.0f,  0.0f, 0.0f, 1.0f,  1.0f, 0.0f,

	-1.0f,  1.0f,  0.0f, 0.0f, 1.0f,  0.0f, 1.0f,
	 1.0f, -1.0f,  0.0f, 0.0f, 1.0f,  1.0f, 0.0f,
	 1.0f,  1.0f,  0.0f, 0.0f, 1.0f,  1.0f, 1.0f
};

float VertexData::quad_vrts__pos_col[] = {
	// positions      // colors
	-0.05f,  0.05f,  1.0f, 0.0f, 0.0f,
	 0.05f, -0.05f,  0.0f, 1.0f, 0.0f,
	-0.05f, -0.05f,  0.0f, 0.0f, 1.0f,

	-0.05f,  0.05f,  1.0f, 0.0f, 0.0f,
	 0.05f, -0.05f,  0.0f, 1.0f, 0.0f,
	 0.05f,  0.05f,  0.0f, 1.0f, 1.0f
};

float VertexData::cube_vrts__pos_norm_uv[] = {		  // position, normal, texture coords
	// Back face
	-0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 0.0f,
	+0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 0.0f,
	+0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 1.0f,
	+0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	1.0f, 1.0f,
	-0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 1.0f,
	-0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,	0.0f, 0.0f,
	// Front face
	-0.5f, -0.5f,  0.5f,  0.0f,  0.0f, 1.0f,	0.0f, 0.0f,
	+0.5f, -0.5f,  0.5f,  0.0f,  0.0f, 1.0f,	1.0f, 0.0f,
	+0.5f,  0.5f,  0.5f,  0.0f,  0.0f, 1.0f,	1.0f, 1.0f,
	+0.5f,  0.5f,  0.5f,  0.0f,  0.0f, 1.0f,	1.0f, 1.0f,
	-0.5f,  0.5f,  0.5f,  0.0f,  0.0f, 1.0f,	0.0f, 1.0f,
	-0.5f, -0.5f,  0.5f,  0.0f,  0.0f, 1.0f,	0.0f, 0.0f,
	// Left face
	-0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	-0.5f,  0.5f, -0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	-0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 1.0f,
	-0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 1.0f,
	-0.5f, -0.5f,  0.5f, -1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	-0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	// Right face
	+0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	+0.5f,  0.5f, -0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 1.0f,
	+0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 1.0f,
	+0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 1.0f,
	+0.5f, -0.5f,  0.5f,  1.0f,  0.0f,  0.0f,	0.0f, 0.0f,
	+0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,	1.0f, 0.0f,
	// Bottom face
	-0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 1.0f,
	+0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 1.0f,
	+0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 0.0f,
	+0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,	1.0f, 0.0f,
	-0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 0.0f,
	-0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,	0.0f, 1.0f,
	// Top face
	-0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 1.0f,
	+0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 1.0f,
	+0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 0.0f,
	+0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,	1.0f, 0.0f,
	-0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 0.0f,
	-0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,	0.0f, 1.0f
};



float VertexData::plane_vrts__pos_norm_uv[] = {		// basic plane
	// pos,                    normal,                    uv
	-1.0f, -0.0f, -1.0f,    0.0f,  1.0f, 0.0f,	    0.0f, 0.0f,
	-1.0f, -0.0f, +1.0f,    0.0f,  1.0f, 0.0f,	    0.0f, 1.0f,
	+1.0f, -0.0f, +1.0f,    0.0f,  1.0f, 0.0f,	    1.0f, 1.0f,
	-1.0f, -0.0f, -1.0f,    0.0f,  1.0f, 0.0f,	    0.0f, 0.0f,
	+1.0f, -0.0f, +1.0f,    0.0f,  1.0f, 0.0f,	    1.0f, 1.0f,
	+1.0f, -0.0f, -1.0f,    0.0f,  1.0f, 0.0f,	    1.0f, 0.0f,
};

unsigned int VertexData::cube_inds__pos_norm_uv[] = {
	 2,  1,  0,  5,  4,  3,     // back
	 6,  7,  8,  9, 10, 11,     // front
	12, 13, 14, 15, 16, 17,     // left
	20, 19, 18, 23, 22, 21,     // right
	24, 25, 26, 27, 28, 29,     // bottom
	32, 31, 30, 35, 34, 33      // top
};


float VertexData::square_vrts[] = {
	// positions				// colors				// texture coords
	-0.5f, 0.5f, 0.0f,		1.0f, 0.0f, 0.0f,	0.0f, 1.0f,				// top left 
	0.5f, 0.5f, 0.0f,		0.0f, 1.0f, 0.0f,	1.0f, 1.0f,				// top right 
	-0.5f, -0.5f, 0.0f,		0.0f, 0.0f, 1.0f,	0.0f, 0.0f,				// bottom left 
	0.5f, -0.5f, 0.0f,		1.0f, 1.0f, 0.0f,	1.0f, 0.0f				// bottom right 

};

unsigned int VertexData::square_inds[] = {
	0, 1, 2,	// first tri
	1, 2, 3		// second tri
};

float VertexData::x_axis[] = {
	// positions				// colors			
	-0.5f, 0.0f, 0.0f,		1.0f, 0.0f, 0.0f,				// - 
	0.5f, 0.0f, 0.0f,		0.0f, 1.0f, 0.0f				// + 

};

float VertexData::y_axis[] = {
	// positions				// colors			
	0.0f, -0.5f, 0.0f,		0.0f, 1.0f, 0.0f,				// -
	0.0f, 0.5f, 0.0f,		0.0f, 0.0f, 1.0f				// + 

};

float VertexData::rectangle__vrts[] = {
	-0.5f,  0.5f, // top-left
	 0.5f,  0.5f, // top-right
	 0.5f, -0.5f, // bottom-right
	-0.5f, -0.5f  // bottom-left
};

//float vertices_v10[] = {
//	-0.5f, -0.5f, 0.0f,     // left
//	 0.5f, -0.5f, 0.0f,     // right
//	 0.0f,  0.5f, 0.0f      // top
//};
//
//float vertices_v11[] = {
//	// first triangle
//	-0.9f, -0.5f, 0.0f,  // left 
//	-0.0f, -0.5f, 0.0f,  // right
//	-0.45f, 0.5f, 0.0f,  // top 
//	// second triangle
//	 0.0f, -0.5f, 0.0f,  // left
//	 0.9f, -0.5f, 0.0f,  // right
//	 0.45f, 0.5f, 0.0f   // top 
//};
//
//float vertices[] = {
//	// positions           // colors
//	 0.0f,  0.5f, 0.0f,  1.0f, 0.0f, 0.0f,   // top 
//	-0.5f, -0.5f, 0.0f,  0.0f, 1.0f, 0.0f,   // bottom left
//	 0.5f, -0.5f, 0.0f,  0.0f, 0.0f, 1.0f    // bottom right
//};
//
//float texCoords[] = {
//	0.0f, 0.0f,  // lower-left corner  
//	1.0f, 0.0f,  // lower-right corner
//	0.5f, 1.0f   // top-center corner
//};
//
//
//float triangle1[] = {
//	// first triangle
//	-0.9f, -0.5f, 0.0f,  // left 
//	-0.0f, -0.5f, 0.0f,  // right
//	-0.45f, 0.5f, 0.0f,  // top  
//};
//
//
//float triangle2[] = {
//	// second triangle
//  0.0f, -0.5f, 0.0f,  // left
//  0.9f, -0.5f, 0.0f,  // right
//  0.45f, 0.5f, 0.0f   // top  
//};
//
//float vertices_2tri[] = {
//	// first triangle
//	 0.5f,  0.5f, 0.0f,  // top right
//	 0.5f, -0.5f, 0.0f,  // bottom right
//	-0.5f,  0.5f, 0.0f,  // top left 
//	// second triangle
//	 0.5f, -0.5f, 0.0f,  // bottom right
//	-0.5f, -0.5f, 0.0f,  // bottom left
//	-0.5f,  0.5f, 0.0f   // top left
//};
//
//float vertices_reduced[] = {
//	// first triangle
//	0.5f,  0.5f, 0.0f,   // top right
//	0.5f, -0.5f, 0.0f,   // bottom right
//	-0.5f, -0.5f, 0.0f,  // bottom left
//	-0.5f,  0.5f, 0.0f   // top left
//};
//
//// to speciicy overlapping vertices | used with Element Buffer object
//unsigned int indices[] = {
//	0, 1, 3,    // first triangle
//	1, 2, 3     // second triangle
//};
